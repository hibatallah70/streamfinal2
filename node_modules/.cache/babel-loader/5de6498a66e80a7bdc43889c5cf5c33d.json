{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\version video+blog+ lobby+chat1\\\\src\\\\pages\\\\index\\\\settings-card.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useGlobalState, useGlobalMutation } from '../../utils/container';\nimport useDevices from '../../utils/use-devices';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Box from '@material-ui/core/Box';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Switch from '@material-ui/core/Switch';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSettingsCard.propTypes = {\n  name: PropTypes.string,\n  resolution: PropTypes.string,\n  cameraDevice: PropTypes.string,\n  microphoneDevice: PropTypes.string,\n  video: PropTypes.bool,\n  audio: PropTypes.bool\n};\nconst useStyles = makeStyles(theme => ({\n  menuTitle: {\n    color: '#333333',\n    textAlign: 'center',\n    fontSize: 'h6.fontSize',\n    position: 'relative',\n    top: '7px'\n  },\n  marginTop: {\n    marginTop: '0 !important'\n  },\n  menu: {\n    margin: '0.25rem 0',\n    position: 'relative',\n    height: '39px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  line: {\n    marginTop: '0.2rem',\n    marginBottom: '0.5rem',\n    borderBottom: '1px solid #EAEAEA'\n  },\n  hr: {\n    borderBottom: '1px solid #EAEAEA'\n  },\n  switchItem: {\n    flexDirection: 'row-reverse !important',\n    marginLeft: '0 !important',\n    marginRight: '0 !important',\n    justifyContent: 'space-between'\n  }\n}));\nconst CustomSwitch = withStyles(theme => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 2,\n    margin: theme.spacing(1)\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#44A2FC',\n        opacity: 1,\n        border: 'none'\n      }\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff'\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border'])\n  },\n  checked: {},\n  focusVisible: {}\n}))(_ref => {\n  let {\n    classes,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    focusVisibleClassName: classes.focusVisible,\n    classes: {\n      root: classes.root,\n      switchBase: classes.switchBase,\n      thumb: classes.thumb,\n      track: classes.track,\n      checked: classes.checked\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n});\n_c = CustomSwitch;\nexport default function SettingsCard() {\n  _s();\n\n  const classes = useStyles();\n  const stateCtx = useGlobalState();\n  const mutationCtx = useGlobalMutation();\n  const [cameraList, microphoneList] = useDevices();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    flex: \"1\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"back-btn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flex: \"1\",\n      flexDirection: \"column\",\n      padding: \"0 1rem\",\n      justifyContent: \"flex-start\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.menu,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.menuTitle,\n          children: \"Setting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.line\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"resolution\",\n          children: \"Resolution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: stateCtx.config.resolution,\n          onChange: evt => {\n            mutationCtx.updateConfig({\n              resolution: evt.target.value\n            });\n          },\n          inputProps: {\n            name: 'resolution',\n            id: 'resolution'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: '480p',\n            children: \"480p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: '720p',\n            children: \"720p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: '1080p',\n            children: \"1080p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"codec\",\n          children: \"Video Codec\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: stateCtx.codec,\n          onChange: evt => {\n            mutationCtx.setCodec(evt.target.value);\n          },\n          inputProps: {\n            name: 'codec',\n            id: 'codec'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 'h264',\n            children: \"h264\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 'vp8',\n            children: \"vp8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"camera\",\n          children: \"Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: stateCtx.config.cameraId,\n          onChange: evt => {\n            mutationCtx.updateConfig({\n              cameraId: evt.target.value\n            });\n          },\n          inputProps: {\n            name: 'camera',\n            id: 'camera'\n          },\n          children: cameraList.map((item, key) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item.value,\n            children: item.label\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"Microphone\",\n          children: \"Microphone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: stateCtx.config.microphoneId,\n          onChange: evt => {\n            mutationCtx.updateConfig({\n              microphoneId: evt.target.value\n            });\n          },\n          inputProps: {\n            name: 'microphone',\n            id: 'microphone'\n          },\n          children: microphoneList.map((item, key) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item.value,\n            children: item.label\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(CustomSwitch, {\n            checked: !stateCtx.muteVideo,\n            onChange: () => {\n              mutationCtx.setVideo(!stateCtx.muteVideo);\n            },\n            value: stateCtx.muteVideo,\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this),\n          className: classes.switchItem,\n          label: \"Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.hr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(CustomSwitch, {\n            checked: !stateCtx.muteAudio,\n            onChange: () => {\n              mutationCtx.setAudio(!stateCtx.muteAudio);\n            },\n            value: stateCtx.muteAudio,\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this),\n          className: classes.switchItem,\n          label: \"Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.hr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(CustomSwitch, {\n            checked: stateCtx.profile,\n            onChange: () => {\n              mutationCtx.setProfile(!stateCtx.profile);\n            },\n            value: stateCtx.profile,\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this),\n          className: classes.switchItem,\n          label: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.hr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SettingsCard, \"4m8ueR8zBxFOvZhIkJBcxkhh5V4=\", false, function () {\n  return [useStyles, useGlobalState, useGlobalMutation, useDevices];\n});\n\n_c2 = SettingsCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomSwitch\");\n$RefreshReg$(_c2, \"SettingsCard\");","map":{"version":3,"names":["React","useGlobalState","useGlobalMutation","useDevices","PropTypes","makeStyles","withStyles","FormControl","Select","FormControlLabel","InputLabel","Box","MenuItem","Switch","Link","SettingsCard","propTypes","name","string","resolution","cameraDevice","microphoneDevice","video","bool","audio","useStyles","theme","menuTitle","color","textAlign","fontSize","position","top","marginTop","menu","margin","height","display","justifyContent","alignItems","line","marginBottom","borderBottom","hr","switchItem","flexDirection","marginLeft","marginRight","CustomSwitch","root","width","padding","spacing","switchBase","transform","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","props","stateCtx","mutationCtx","cameraList","microphoneList","config","evt","updateConfig","target","value","id","codec","setCodec","cameraId","map","item","key","label","microphoneId","muteVideo","setVideo","muteAudio","setAudio","profile","setProfile"],"sources":["C:/Users/hp/Desktop/version video+blog+ lobby+chat1/src/pages/index/settings-card.jsx"],"sourcesContent":["import React from 'react'\r\nimport {useGlobalState, useGlobalMutation} from '../../utils/container'\r\nimport useDevices from '../../utils/use-devices'\r\nimport PropTypes from 'prop-types'\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Box from '@material-ui/core/Box'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport {Link} from 'react-router-dom'\r\n\r\nSettingsCard.propTypes = {\r\n    name: PropTypes.string,\r\n    resolution: PropTypes.string,\r\n    cameraDevice: PropTypes.string,\r\n    microphoneDevice: PropTypes.string,\r\n    video: PropTypes.bool,\r\n    audio: PropTypes.bool\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuTitle: {\r\n        color: '#333333',\r\n        textAlign: 'center',\r\n        fontSize: 'h6.fontSize',\r\n        position: 'relative',\r\n        top: '7px'\r\n    },\r\n    marginTop: {\r\n        marginTop: '0 !important'\r\n    },\r\n    menu: {\r\n        margin: '0.25rem 0',\r\n        position: 'relative',\r\n        height: '39px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    line: {\r\n        marginTop: '0.2rem',\r\n        marginBottom: '0.5rem',\r\n        borderBottom: '1px solid #EAEAEA'\r\n    },\r\n    hr: {\r\n        borderBottom: '1px solid #EAEAEA'\r\n    },\r\n    switchItem: {\r\n        flexDirection: 'row-reverse !important',\r\n        marginLeft: '0 !important',\r\n        marginRight: '0 !important',\r\n        justifyContent: 'space-between'\r\n    }\r\n}))\r\n\r\nconst CustomSwitch = withStyles((theme) => ({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 2,\r\n        margin: theme.spacing(1)\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                backgroundColor: '#44A2FC',\r\n                opacity: 1,\r\n                border: 'none'\r\n            }\r\n        },\r\n        '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff'\r\n        }\r\n    },\r\n    thumb: {\r\n        width: 24,\r\n        height: 24\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid ${theme.palette.grey[400]}`,\r\n        backgroundColor: theme.palette.grey[50],\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border'])\r\n    },\r\n    checked: {},\r\n    focusVisible: {}\r\n}))(({classes, ...props}) => {\r\n    return (\r\n        <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked\r\n            }}\r\n            {...props}\r\n        />\r\n    )\r\n})\r\n\r\nexport default function SettingsCard() {\r\n    const classes = useStyles()\r\n\r\n    const stateCtx = useGlobalState()\r\n\r\n    const mutationCtx = useGlobalMutation()\r\n\r\n    const [cameraList, microphoneList] = useDevices()\r\n\r\n    return (\r\n        <Box flex=\"1\" display=\"flex\" flexDirection=\"column\">\r\n            <Link to=\"/\" className=\"back-btn\"/>\r\n            <Box\r\n                display=\"flex\"\r\n                flex=\"1\"\r\n                flexDirection=\"column\"\r\n                padding=\"0 1rem\"\r\n                justifyContent=\"flex-start\"\r\n            >\r\n                <FormControl className={classes.menu}>\r\n                    <span className={classes.menuTitle}>Setting</span>\r\n                </FormControl>\r\n                <div className={classes.line}></div>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"resolution\">Resolution</InputLabel>\r\n                    <Select\r\n                        value={stateCtx.config.resolution}\r\n                        onChange={(evt) => {\r\n                            mutationCtx.updateConfig({\r\n                                resolution: evt.target.value\r\n                            })\r\n                        }}\r\n                        inputProps={{\r\n                            name: 'resolution',\r\n                            id: 'resolution'\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'480p'}>480p</MenuItem>\r\n                        <MenuItem value={'720p'}>720p</MenuItem>\r\n                        <MenuItem value={'1080p'}>1080p</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"codec\">Video Codec</InputLabel>\r\n                    <Select\r\n                        value={stateCtx.codec}\r\n                        onChange={(evt) => {\r\n                            mutationCtx.setCodec(evt.target.value)\r\n                        }}\r\n                        inputProps={{\r\n                            name: 'codec',\r\n                            id: 'codec'\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'h264'}>h264</MenuItem>\r\n                        <MenuItem value={'vp8'}>vp8</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"camera\">Camera</InputLabel>\r\n                    <Select\r\n                        value={stateCtx.config.cameraId}\r\n                        onChange={(evt) => {\r\n                            mutationCtx.updateConfig({\r\n                                cameraId: evt.target.value\r\n                            })\r\n                        }}\r\n                        inputProps={{\r\n                            name: 'camera',\r\n                            id: 'camera'\r\n                        }}\r\n                    >\r\n                        {cameraList.map((item, key) => (\r\n                            <MenuItem key={key} value={item.value}>\r\n                                {item.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"Microphone\">Microphone</InputLabel>\r\n                    <Select\r\n                        value={stateCtx.config.microphoneId}\r\n                        onChange={(evt) => {\r\n                            mutationCtx.updateConfig({\r\n                                microphoneId: evt.target.value\r\n                            })\r\n                        }}\r\n                        inputProps={{\r\n                            name: 'microphone',\r\n                            id: 'microphone'\r\n                        }}\r\n                    >\r\n                        {microphoneList.map((item, key) => (\r\n                            <MenuItem key={key} value={item.value}>\r\n                                {item.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <CustomSwitch\r\n                                checked={!stateCtx.muteVideo}\r\n                                onChange={() => {\r\n                                    mutationCtx.setVideo(!stateCtx.muteVideo)\r\n                                }}\r\n                                value={stateCtx.muteVideo}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        className={classes.switchItem}\r\n                        label=\"Video\"\r\n                    />\r\n                    <div className={classes.hr}></div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <CustomSwitch\r\n                                checked={!stateCtx.muteAudio}\r\n                                onChange={() => {\r\n                                    mutationCtx.setAudio(!stateCtx.muteAudio)\r\n                                }}\r\n                                value={stateCtx.muteAudio}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        className={classes.switchItem}\r\n                        label=\"Audio\"\r\n                    />\r\n                    <div className={classes.hr}></div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <CustomSwitch\r\n                                checked={stateCtx.profile}\r\n                                onChange={() => {\r\n                                    mutationCtx.setProfile(!stateCtx.profile)\r\n                                }}\r\n                                value={stateCtx.profile}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        className={classes.switchItem}\r\n                        label=\"Profile\"\r\n                    />\r\n                    <div className={classes.hr}></div>\r\n                </FormControl>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,uBAAhD;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,0BAArC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEAC,YAAY,CAACC,SAAb,GAAyB;EACrBC,IAAI,EAAEb,SAAS,CAACc,MADK;EAErBC,UAAU,EAAEf,SAAS,CAACc,MAFD;EAGrBE,YAAY,EAAEhB,SAAS,CAACc,MAHH;EAIrBG,gBAAgB,EAAEjB,SAAS,CAACc,MAJP;EAKrBI,KAAK,EAAElB,SAAS,CAACmB,IALI;EAMrBC,KAAK,EAAEpB,SAAS,CAACmB;AANI,CAAzB;AASA,MAAME,SAAS,GAAGpB,UAAU,CAAEqB,KAAD,KAAY;EACrCC,SAAS,EAAE;IACPC,KAAK,EAAE,SADA;IAEPC,SAAS,EAAE,QAFJ;IAGPC,QAAQ,EAAE,aAHH;IAIPC,QAAQ,EAAE,UAJH;IAKPC,GAAG,EAAE;EALE,CAD0B;EAQrCC,SAAS,EAAE;IACPA,SAAS,EAAE;EADJ,CAR0B;EAWrCC,IAAI,EAAE;IACFC,MAAM,EAAE,WADN;IAEFJ,QAAQ,EAAE,UAFR;IAGFK,MAAM,EAAE,MAHN;IAIFC,OAAO,EAAE,MAJP;IAKFC,cAAc,EAAE,QALd;IAMFC,UAAU,EAAE;EANV,CAX+B;EAmBrCC,IAAI,EAAE;IACFP,SAAS,EAAE,QADT;IAEFQ,YAAY,EAAE,QAFZ;IAGFC,YAAY,EAAE;EAHZ,CAnB+B;EAwBrCC,EAAE,EAAE;IACAD,YAAY,EAAE;EADd,CAxBiC;EA2BrCE,UAAU,EAAE;IACRC,aAAa,EAAE,wBADP;IAERC,UAAU,EAAE,cAFJ;IAGRC,WAAW,EAAE,cAHL;IAIRT,cAAc,EAAE;EAJR;AA3ByB,CAAZ,CAAD,CAA5B;AAmCA,MAAMU,YAAY,GAAG1C,UAAU,CAAEoB,KAAD,KAAY;EACxCuB,IAAI,EAAE;IACFC,KAAK,EAAE,EADL;IAEFd,MAAM,EAAE,EAFN;IAGFe,OAAO,EAAE,CAHP;IAIFhB,MAAM,EAAET,KAAK,CAAC0B,OAAN,CAAc,CAAd;EAJN,CADkC;EAOxCC,UAAU,EAAE;IACRF,OAAO,EAAE,CADD;IAER,aAAa;MACTG,SAAS,EAAE,kBADF;MAET1B,KAAK,EAAEF,KAAK,CAAC6B,OAAN,CAAcC,MAAd,CAAqBC,KAFnB;MAGT,cAAc;QACVC,eAAe,EAAE,SADP;QAEVC,OAAO,EAAE,CAFC;QAGVC,MAAM,EAAE;MAHE;IAHL,CAFL;IAWR,yBAAyB;MACrBhC,KAAK,EAAE,SADc;MAErBgC,MAAM,EAAE;IAFa;EAXjB,CAP4B;EAuBxCC,KAAK,EAAE;IACHX,KAAK,EAAE,EADJ;IAEHd,MAAM,EAAE;EAFL,CAvBiC;EA2BxC0B,KAAK,EAAE;IACHC,YAAY,EAAE,KAAK,CADhB;IAEHH,MAAM,EAAG,aAAYlC,KAAK,CAAC6B,OAAN,CAAcS,IAAd,CAAmB,GAAnB,CAAwB,EAF1C;IAGHN,eAAe,EAAEhC,KAAK,CAAC6B,OAAN,CAAcS,IAAd,CAAmB,EAAnB,CAHd;IAIHL,OAAO,EAAE,CAJN;IAKHM,UAAU,EAAEvC,KAAK,CAACwC,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,kBAAD,EAAqB,QAArB,CAAzB;EALT,CA3BiC;EAkCxCC,OAAO,EAAE,EAlC+B;EAmCxCC,YAAY,EAAE;AAnC0B,CAAZ,CAAD,CAAV,CAoCjB,QAAyB;EAAA,IAAxB;IAACC,OAAD;IAAU,GAAGC;EAAb,CAAwB;EACzB,oBACI,QAAC,MAAD;IACI,qBAAqB,EAAED,OAAO,CAACD,YADnC;IAEI,OAAO,EAAE;MACLpB,IAAI,EAAEqB,OAAO,CAACrB,IADT;MAELI,UAAU,EAAEiB,OAAO,CAACjB,UAFf;MAGLQ,KAAK,EAAES,OAAO,CAACT,KAHV;MAILC,KAAK,EAAEQ,OAAO,CAACR,KAJV;MAKLM,OAAO,EAAEE,OAAO,CAACF;IALZ,CAFb;IAAA,GASQG;EATR;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CAlDoB,CAArB;KAAMvB,Y;AAoDN,eAAe,SAASjC,YAAT,GAAwB;EAAA;;EACnC,MAAMuD,OAAO,GAAG7C,SAAS,EAAzB;EAEA,MAAM+C,QAAQ,GAAGvE,cAAc,EAA/B;EAEA,MAAMwE,WAAW,GAAGvE,iBAAiB,EAArC;EAEA,MAAM,CAACwE,UAAD,EAAaC,cAAb,IAA+BxE,UAAU,EAA/C;EAEA,oBACI,QAAC,GAAD;IAAK,IAAI,EAAC,GAAV;IAAc,OAAO,EAAC,MAAtB;IAA6B,aAAa,EAAC,QAA3C;IAAA,wBACI,QAAC,IAAD;MAAM,EAAE,EAAC,GAAT;MAAa,SAAS,EAAC;IAAvB;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,GAAD;MACI,OAAO,EAAC,MADZ;MAEI,IAAI,EAAC,GAFT;MAGI,aAAa,EAAC,QAHlB;MAII,OAAO,EAAC,QAJZ;MAKI,cAAc,EAAC,YALnB;MAAA,wBAOI,QAAC,WAAD;QAAa,SAAS,EAAEmE,OAAO,CAACpC,IAAhC;QAAA,uBACI;UAAM,SAAS,EAAEoC,OAAO,CAAC3C,SAAzB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAPJ,eAUI;QAAK,SAAS,EAAE2C,OAAO,CAAC9B;MAAxB;QAAA;QAAA;QAAA;MAAA,QAVJ,eAWI,QAAC,WAAD;QAAA,wBACI,QAAC,UAAD;UAAY,OAAO,EAAC,YAApB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,MAAD;UACI,KAAK,EAAEgC,QAAQ,CAACI,MAAT,CAAgBzD,UAD3B;UAEI,QAAQ,EAAG0D,GAAD,IAAS;YACfJ,WAAW,CAACK,YAAZ,CAAyB;cACrB3D,UAAU,EAAE0D,GAAG,CAACE,MAAJ,CAAWC;YADF,CAAzB;UAGH,CANL;UAOI,UAAU,EAAE;YACR/D,IAAI,EAAE,YADE;YAERgE,EAAE,EAAE;UAFI,CAPhB;UAAA,wBAYI,QAAC,QAAD;YAAU,KAAK,EAAE,MAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAZJ,eAaI,QAAC,QAAD;YAAU,KAAK,EAAE,MAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAbJ,eAcI,QAAC,QAAD;YAAU,KAAK,EAAE,OAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAdJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ,eA8BI,QAAC,WAAD;QAAA,wBACI,QAAC,UAAD;UAAY,OAAO,EAAC,OAApB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,MAAD;UACI,KAAK,EAAET,QAAQ,CAACU,KADpB;UAEI,QAAQ,EAAGL,GAAD,IAAS;YACfJ,WAAW,CAACU,QAAZ,CAAqBN,GAAG,CAACE,MAAJ,CAAWC,KAAhC;UACH,CAJL;UAKI,UAAU,EAAE;YACR/D,IAAI,EAAE,OADE;YAERgE,EAAE,EAAE;UAFI,CALhB;UAAA,wBAUI,QAAC,QAAD;YAAU,KAAK,EAAE,MAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAVJ,eAWI,QAAC,QAAD;YAAU,KAAK,EAAE,KAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAXJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QA9BJ,eA8CI,QAAC,WAAD;QAAA,wBACI,QAAC,UAAD;UAAY,OAAO,EAAC,QAApB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,MAAD;UACI,KAAK,EAAET,QAAQ,CAACI,MAAT,CAAgBQ,QAD3B;UAEI,QAAQ,EAAGP,GAAD,IAAS;YACfJ,WAAW,CAACK,YAAZ,CAAyB;cACrBM,QAAQ,EAAEP,GAAG,CAACE,MAAJ,CAAWC;YADA,CAAzB;UAGH,CANL;UAOI,UAAU,EAAE;YACR/D,IAAI,EAAE,QADE;YAERgE,EAAE,EAAE;UAFI,CAPhB;UAAA,UAYKP,UAAU,CAACW,GAAX,CAAe,CAACC,IAAD,EAAOC,GAAP,kBACZ,QAAC,QAAD;YAAoB,KAAK,EAAED,IAAI,CAACN,KAAhC;YAAA,UACKM,IAAI,CAACE;UADV,GAAeD,GAAf;YAAA;YAAA;YAAA;UAAA,QADH;QAZL;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QA9CJ,eAmEI,QAAC,WAAD;QAAA,wBACI,QAAC,UAAD;UAAY,OAAO,EAAC,YAApB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,MAAD;UACI,KAAK,EAAEf,QAAQ,CAACI,MAAT,CAAgBa,YAD3B;UAEI,QAAQ,EAAGZ,GAAD,IAAS;YACfJ,WAAW,CAACK,YAAZ,CAAyB;cACrBW,YAAY,EAAEZ,GAAG,CAACE,MAAJ,CAAWC;YADJ,CAAzB;UAGH,CANL;UAOI,UAAU,EAAE;YACR/D,IAAI,EAAE,YADE;YAERgE,EAAE,EAAE;UAFI,CAPhB;UAAA,UAYKN,cAAc,CAACU,GAAf,CAAmB,CAACC,IAAD,EAAOC,GAAP,kBAChB,QAAC,QAAD;YAAoB,KAAK,EAAED,IAAI,CAACN,KAAhC;YAAA,UACKM,IAAI,CAACE;UADV,GAAeD,GAAf;YAAA;YAAA;YAAA;UAAA,QADH;QAZL;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAnEJ,eAwFI,QAAC,WAAD;QAAA,wBACI,QAAC,gBAAD;UACI,OAAO,eACH,QAAC,YAAD;YACI,OAAO,EAAE,CAACf,QAAQ,CAACkB,SADvB;YAEI,QAAQ,EAAE,MAAM;cACZjB,WAAW,CAACkB,QAAZ,CAAqB,CAACnB,QAAQ,CAACkB,SAA/B;YACH,CAJL;YAKI,KAAK,EAAElB,QAAQ,CAACkB,SALpB;YAMI,KAAK,EAAC;UANV;YAAA;YAAA;YAAA;UAAA,QAFR;UAWI,SAAS,EAAEpB,OAAO,CAAC1B,UAXvB;UAYI,KAAK,EAAC;QAZV;UAAA;UAAA;UAAA;QAAA,QADJ,eAeI;UAAK,SAAS,EAAE0B,OAAO,CAAC3B;QAAxB;UAAA;UAAA;UAAA;QAAA,QAfJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAxFJ,eAyGI,QAAC,WAAD;QAAA,wBACI,QAAC,gBAAD;UACI,OAAO,eACH,QAAC,YAAD;YACI,OAAO,EAAE,CAAC6B,QAAQ,CAACoB,SADvB;YAEI,QAAQ,EAAE,MAAM;cACZnB,WAAW,CAACoB,QAAZ,CAAqB,CAACrB,QAAQ,CAACoB,SAA/B;YACH,CAJL;YAKI,KAAK,EAAEpB,QAAQ,CAACoB,SALpB;YAMI,KAAK,EAAC;UANV;YAAA;YAAA;YAAA;UAAA,QAFR;UAWI,SAAS,EAAEtB,OAAO,CAAC1B,UAXvB;UAYI,KAAK,EAAC;QAZV;UAAA;UAAA;UAAA;QAAA,QADJ,eAeI;UAAK,SAAS,EAAE0B,OAAO,CAAC3B;QAAxB;UAAA;UAAA;UAAA;QAAA,QAfJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAzGJ,eA0HI,QAAC,WAAD;QAAA,wBACI,QAAC,gBAAD;UACI,OAAO,eACH,QAAC,YAAD;YACI,OAAO,EAAE6B,QAAQ,CAACsB,OADtB;YAEI,QAAQ,EAAE,MAAM;cACZrB,WAAW,CAACsB,UAAZ,CAAuB,CAACvB,QAAQ,CAACsB,OAAjC;YACH,CAJL;YAKI,KAAK,EAAEtB,QAAQ,CAACsB,OALpB;YAMI,KAAK,EAAC;UANV;YAAA;YAAA;YAAA;UAAA,QAFR;UAWI,SAAS,EAAExB,OAAO,CAAC1B,UAXvB;UAYI,KAAK,EAAC;QAZV;UAAA;UAAA;UAAA;QAAA,QADJ,eAeI;UAAK,SAAS,EAAE0B,OAAO,CAAC3B;QAAxB;UAAA;UAAA;UAAA;QAAA,QAfJ;MAAA;QAAA;QAAA;QAAA;MAAA,QA1HJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiJH;;GA1JuB5B,Y;UACJU,S,EAECxB,c,EAEGC,iB,EAEiBC,U;;;MAPjBY,Y"},"metadata":{},"sourceType":"module"}