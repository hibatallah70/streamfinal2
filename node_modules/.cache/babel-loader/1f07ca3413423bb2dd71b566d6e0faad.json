{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from 'react';\nimport { useGlobalState, useGlobalMutation } from '../utils/container';\nimport RTCClient from '../rtc-client';\nexport default function useDevices() {\n  _s();\n\n  const stateCtx = useGlobalState();\n  const mutationCtx = useGlobalMutation();\n  const client = useMemo(() => {\n    const _rtcClient = new RTCClient();\n\n    return _rtcClient;\n  }, []);\n  const [cameraList, microphoneList] = useMemo(() => {\n    return [stateCtx.devicesList.filter(item => item.kind === 'videoinput').map((item, idx) => ({\n      value: item.deviceId,\n      label: item.label ? item.label : `Video Input ${idx}`\n    })), stateCtx.devicesList.filter(item => item.kind === 'audioinput').map((item, idx) => ({\n      value: item.deviceId,\n      label: item.label ? item.label : `Audio Input ${idx}`\n    }))];\n  }, [stateCtx.devicesList]);\n  useEffect(() => {\n    if (cameraList.length > 0 || microphoneList.length > 0) return;\n    client.getDevices().then(datas => {\n      mutationCtx.setDevicesList(datas);\n    });\n    return () => {\n      client.destroy();\n    };\n  }, [microphoneList, mutationCtx, cameraList, client]);\n  useEffect(() => {\n    if (cameraList[0] && microphoneList[0] && (!stateCtx.config.cameraId || !stateCtx.config.microphoneId)) {\n      mutationCtx.updateConfig({\n        cameraId: cameraList[0].value,\n        microphoneId: microphoneList[0].value\n      });\n      mutationCtx.stopLoading();\n    }\n  }, [mutationCtx, stateCtx.devicesList, stateCtx.config, cameraList, microphoneList]);\n  return [cameraList, microphoneList];\n}\n\n_s(useDevices, \"A7/B3E8nsOdG7bU6l6f2TkWvezM=\", false, function () {\n  return [useGlobalState, useGlobalMutation];\n});","map":{"version":3,"names":["React","useEffect","useMemo","useGlobalState","useGlobalMutation","RTCClient","useDevices","stateCtx","mutationCtx","client","_rtcClient","cameraList","microphoneList","devicesList","filter","item","kind","map","idx","value","deviceId","label","length","getDevices","then","datas","setDevicesList","destroy","config","cameraId","microphoneId","updateConfig","stopLoading"],"sources":["C:/Users/hp/AppData/Local/Programs/Python/Python310/version video+blog+ lobby+chat1/src/utils/use-devices.jsx"],"sourcesContent":["import React, {useEffect, useMemo} from 'react'\r\nimport {useGlobalState, useGlobalMutation} from '../utils/container'\r\nimport RTCClient from '../rtc-client'\r\n\r\nexport default function useDevices() {\r\n    const stateCtx = useGlobalState()\r\n    const mutationCtx = useGlobalMutation()\r\n\r\n    const client = useMemo(() => {\r\n        const _rtcClient = new RTCClient()\r\n        return _rtcClient\r\n    }, [])\r\n\r\n    const [cameraList, microphoneList] = useMemo(() => {\r\n        return [\r\n            stateCtx.devicesList\r\n                .filter((item) => item.kind === 'videoinput')\r\n                .map((item, idx) => ({\r\n                    value: item.deviceId,\r\n                    label: item.label ? item.label : `Video Input ${idx}`\r\n                })),\r\n            stateCtx.devicesList\r\n                .filter((item) => item.kind === 'audioinput')\r\n                .map((item, idx) => ({\r\n                    value: item.deviceId,\r\n                    label: item.label ? item.label : `Audio Input ${idx}`\r\n                }))\r\n        ]\r\n    }, [stateCtx.devicesList])\r\n\r\n    useEffect(() => {\r\n        if (cameraList.length > 0 || microphoneList.length > 0) return\r\n\r\n        client.getDevices().then((datas) => {\r\n            mutationCtx.setDevicesList(datas)\r\n        })\r\n        return () => {\r\n            client.destroy()\r\n        }\r\n    }, [microphoneList, mutationCtx, cameraList, client])\r\n\r\n    useEffect(() => {\r\n        if (\r\n            cameraList[0] &&\r\n            microphoneList[0] &&\r\n            (!stateCtx.config.cameraId || !stateCtx.config.microphoneId)\r\n        ) {\r\n            mutationCtx.updateConfig({\r\n                cameraId: cameraList[0].value,\r\n                microphoneId: microphoneList[0].value\r\n            })\r\n            mutationCtx.stopLoading()\r\n        }\r\n    }, [\r\n        mutationCtx,\r\n        stateCtx.devicesList,\r\n        stateCtx.config,\r\n        cameraList,\r\n        microphoneList\r\n    ])\r\n\r\n    return [cameraList, microphoneList]\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,OAA1B,QAAwC,OAAxC;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,oBAAhD;AACA,OAAOC,SAAP,MAAsB,eAAtB;AAEA,eAAe,SAASC,UAAT,GAAsB;EAAA;;EACjC,MAAMC,QAAQ,GAAGJ,cAAc,EAA/B;EACA,MAAMK,WAAW,GAAGJ,iBAAiB,EAArC;EAEA,MAAMK,MAAM,GAAGP,OAAO,CAAC,MAAM;IACzB,MAAMQ,UAAU,GAAG,IAAIL,SAAJ,EAAnB;;IACA,OAAOK,UAAP;EACH,CAHqB,EAGnB,EAHmB,CAAtB;EAKA,MAAM,CAACC,UAAD,EAAaC,cAAb,IAA+BV,OAAO,CAAC,MAAM;IAC/C,OAAO,CACHK,QAAQ,CAACM,WAAT,CACKC,MADL,CACaC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAc,YADpC,EAEKC,GAFL,CAES,CAACF,IAAD,EAAOG,GAAP,MAAgB;MACjBC,KAAK,EAAEJ,IAAI,CAACK,QADK;MAEjBC,KAAK,EAAEN,IAAI,CAACM,KAAL,GAAaN,IAAI,CAACM,KAAlB,GAA2B,eAAcH,GAAI;IAFnC,CAAhB,CAFT,CADG,EAOHX,QAAQ,CAACM,WAAT,CACKC,MADL,CACaC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAc,YADpC,EAEKC,GAFL,CAES,CAACF,IAAD,EAAOG,GAAP,MAAgB;MACjBC,KAAK,EAAEJ,IAAI,CAACK,QADK;MAEjBC,KAAK,EAAEN,IAAI,CAACM,KAAL,GAAaN,IAAI,CAACM,KAAlB,GAA2B,eAAcH,GAAI;IAFnC,CAAhB,CAFT,CAPG,CAAP;EAcH,CAf2C,EAezC,CAACX,QAAQ,CAACM,WAAV,CAfyC,CAA5C;EAiBAZ,SAAS,CAAC,MAAM;IACZ,IAAIU,UAAU,CAACW,MAAX,GAAoB,CAApB,IAAyBV,cAAc,CAACU,MAAf,GAAwB,CAArD,EAAwD;IAExDb,MAAM,CAACc,UAAP,GAAoBC,IAApB,CAA0BC,KAAD,IAAW;MAChCjB,WAAW,CAACkB,cAAZ,CAA2BD,KAA3B;IACH,CAFD;IAGA,OAAO,MAAM;MACThB,MAAM,CAACkB,OAAP;IACH,CAFD;EAGH,CATQ,EASN,CAACf,cAAD,EAAiBJ,WAAjB,EAA8BG,UAA9B,EAA0CF,MAA1C,CATM,CAAT;EAWAR,SAAS,CAAC,MAAM;IACZ,IACIU,UAAU,CAAC,CAAD,CAAV,IACAC,cAAc,CAAC,CAAD,CADd,KAEC,CAACL,QAAQ,CAACqB,MAAT,CAAgBC,QAAjB,IAA6B,CAACtB,QAAQ,CAACqB,MAAT,CAAgBE,YAF/C,CADJ,EAIE;MACEtB,WAAW,CAACuB,YAAZ,CAAyB;QACrBF,QAAQ,EAAElB,UAAU,CAAC,CAAD,CAAV,CAAcQ,KADH;QAErBW,YAAY,EAAElB,cAAc,CAAC,CAAD,CAAd,CAAkBO;MAFX,CAAzB;MAIAX,WAAW,CAACwB,WAAZ;IACH;EACJ,CAZQ,EAYN,CACCxB,WADD,EAECD,QAAQ,CAACM,WAFV,EAGCN,QAAQ,CAACqB,MAHV,EAICjB,UAJD,EAKCC,cALD,CAZM,CAAT;EAoBA,OAAO,CAACD,UAAD,EAAaC,cAAb,CAAP;AACH;;GA1DuBN,U;UACHH,c,EACGC,iB"},"metadata":{},"sourceType":"module"}